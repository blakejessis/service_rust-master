// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::prelude::*;
use diesel::Queryable;
use diesel::Insertable;
use chrono::{NaiveDateTime, NaiveDate};
use diesel::Expression;
use diesel::sql_types::{Float8, Array, Int4, Timestamp};
use super::schema::{event, attendes, endl, start, recurrence, reminders, overrides};

#[derive(Queryable, Debug)]
pub struct Attende {
    pub id: i32,
    pub email: String,
    pub idevent: Option<i32>,
}

#[derive(Queryable, Debug)]
pub struct Endl {
    pub id: i32,
    pub dt: NaiveDateTime,
    pub timezone: String,
    pub idevent: Option<i32>,
}

#[derive(Queryable, Debug)]
pub struct Events {
    pub id: i32,
    pub summary: String,
    pub location: String,
    pub description: String,
}

#[derive(Queryable, Debug)]
pub struct Override {
    pub id: i32,
    pub method: String,
    pub minutes: i32,
    pub idreminders: Option<i32>,
    pub idevent: Option<i32>,
}

#[derive(Queryable, Debug)]
pub struct Recurrence {
    pub id: i32,
    pub rrule: String,
    pub idevent: Option<i32>,
}

#[derive(Queryable, Debug)]
pub struct Reminder {
    pub id: i32,
    pub usedefault: bool,
    pub idevent: Option<i32>,
}

#[derive(Queryable, Debug)]
pub struct Start {
    pub id: i32,
    pub dt: NaiveDateTime,
    pub timezone: String,
    pub idevent: Option<i32>,
}


#[derive(Insertable)]
#[table_name = "event"]
pub struct NewEvent {
    pub summary: String,
    pub location: String,
    pub description: String,
}

#[derive(Insertable)]
#[table_name = "attendes"]
pub struct NewAttende {
    pub email: String,
    pub idevent: Option<i32>,
}

#[derive(Insertable)]
#[table_name = "endl"]
pub struct NewEndl {
    pub dt: NaiveDateTime,
    pub timezone: String,
    pub idevent: Option<i32>,
}

#[derive(Insertable)]
#[table_name = "overrides"]
pub struct NewOverride {
    pub method: String,
    pub minutes: i32,
    pub idreminders: Option<i32>,
    pub idevent: Option<i32>,
}

#[derive(Insertable)]
#[table_name = "recurrence"]
pub struct NewRecurrence {
    pub rrule: String,
    pub idevent: Option<i32>,
}

#[derive(Insertable)]
#[table_name = "reminders"]
pub struct NewReminder {
    pub usedefault: bool,
    pub idevent: Option<i32>,
}

#[derive(Insertable)]
#[table_name = "start"]
pub struct NewStart {
    pub dt: NaiveDateTime,
    pub timezone: String,
    pub idevent: Option<i32>,
}

